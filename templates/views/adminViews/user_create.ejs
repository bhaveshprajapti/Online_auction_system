</div>


<!DOCTYPE html>
<html lang="en" dir="ltr">



<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">

    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">


    <meta name="description" content="Global Auction System">
    <meta name="keywords" content="Global Auction System">
    <meta name="csrf_token" content="Zw1eYq4tsFJFwBA8kJfLb6fP8Lt3xu69dsUILDfj">

    <link rel="icon" href="/public/uploads/settings/H0DUiWpMJYMGEPP.png" type="image/x-icon" />

    <title>
        Bidzone
    </title>



    <link href="/public/adminlte/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/public/adminlte/css/select2.min.css" />
    <link href="/public/adminlte/css/AdminLTE.min.css" rel="stylesheet">
    <link href="/public/adminlte/css/custom.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="/public/css/global-admin.css" rel="stylesheet">

    <!-- <link href="/public/adminlte/css/skins/skin-blue.min.css" rel="stylesheet"> -->

    <link href="/public/css/sweetalert.css" rel="stylesheet" type="text/css">






    <link rel="stylesheet" href="/public/adminlte/css/online/jquery-ui.css">
    <link rel="stylesheet" href="/public/adminlte/css/online/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="/public/adminlte/css/online/select.dataTables.min.css" />
    <link rel="stylesheet" href="/public/adminlte/css/online/buttons.dataTables.min.css" />
    <link rel="stylesheet" href="/public/adminlte/css/online/jquery-ui-timepicker-addon.min.css" />
    <link rel="stylesheet" href="/public/adminlte/css/online/bootstrap-datepicker.standalone.min.css" />



    <!-- Font Awesome -->
    <link rel="stylesheet" href="/public/adminlte/css/online/font-awesome.min.css">


    <!-- Ionicons -->
    <link rel="stylesheet" href="/public/adminlte/css/online/ionicons.min.css">

    <link href="/public/css/admin.css" rel="stylesheet">


    <!--admin custom css-->
    <link href="/public/css/admin-custom.css" rel="stylesheet">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
<script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
<script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
</head>




<body class="hold-transition skin-blue sidebar-mini" ng-app="academia">


    <div ng-controller="prepareUserData">



        <div id="wrapper">


            <%- include('admin_side_navbar') %>
            <!-- Content Wrapper. Contains page content -->
            <div class="content-wrapper">
                <!-- Main content -->
                <section class="content">

                    <div class="row">
                        <div class="col-md-12">




                            <h3 class="page-title">Users</h3>

                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    Users
                                </div>
                                <% if (errorMessage) { %>
                                    <div class="alert alert-danger" role="alert">
                                        <%= errorMessage %>
                                    </div>
                                <% } %>


                                <div class="panel-body form-auth-style" id="app">

                                    <div class="row">
                                        <form id="userForm" method="POST" action="<%= isEditMode ? '/admin/users/update/' + user._id : '/admin/users/create' %>">

                                           
                                            <div class="col-xs-6">
                                                <div class="form-group">
                                                    <label for="firstname" class="control-label">First Name</label>
                                                    <span class="text-red">*</span>
                                                    <input class="form-control" placeholder="First Name" required="true" name="firstname" type="text" id="firstname" value="<%= isEditMode ? user.firstname : '' %>">
                                                </div>
                                                <div class="form-group">
                                                    <label for="lastname" class="control-label">Last Name</label>
                                                    <span class="text-red">*</span>
                                                    <input class="form-control" placeholder="Last Name" required="true" name="lastname" type="text" id="lastname" value="<%= isEditMode ? user.lastname : '' %>">
                                                </div>
                                                <div class="form-group">
                                                    <label for="phone" class="control-label">Phone</label>
                                                    <span class="text-red">*</span>
                                                    <input class="form-control" placeholder="Phone" required="true" name="mobileno" type="text" id="phone" value="<%= isEditMode ? user.mobileno : '' %>">
                                                </div>
                                                <div class="form-group">
                                                    <label for="email" class="control-label">Email</label>
                                                    <span class="text-red">*</span>
                                                    <input class="form-control" placeholder="Email" required="true" name="email" type="email" id="email" value="<%= isEditMode ? user.email : '' %>">
                                                </div>
                                                <div class="form-group">
                                                    <label for="address" class="control-label">Address</label>
                                                    <textarea class="form-control" rows="3" placeholder="Address" name="address" cols="50" id="address"><%= isEditMode ? user.address : '' %></textarea>
                                                </div>
                                                <% if (!isEditMode) { %>
                                                    <div class="form-group">
                                                        <label for="password" class="control-label">Password</label>
                                                        <span class="text-red">*</span>
                                                        <input class="form-control instruction-call" placeholder="Password" required="true" name="password" type="password" value="" id="password">
                                                    </div>
                                                    <div class="form-group">
                                                        <label for="confirm_password" class="control-label">Confirm Password</label>
                                                        <span class="text-red">*</span>
                                                        <input class="form-control instruction-call" placeholder="Confirm Password" required="true" name="password_confirmation" type="password" value="">                                             
                                                    </div>
                                                <% } %>
                                                <div class="form-group">
                                                    <label for="role" class="control-label" name="role">Role</label>
                                                    <span class="text-red">*</span>
                                                    <select class="form-control select2" required="true" name="role">
                                                        <option selected="selected" value="">Select Role</option>
                                                        <option value="admin" <%= isEditMode && user.is_admin ? 'selected' : '' %>>Administrator</option>
                                                        <option value="seller" <%= isEditMode && user.is_seller ? 'selected' : '' %>>Seller</option>
                                                        <option value="bidder" <%= isEditMode && !user.is_admin && !user.is_seller ? 'selected' : '' %>>Bidder</option>
                                                    </select>
                                                </div>
                                                
                                                <div class="form-group">
                                                    <label for="approved" class="control-label" name="status">Status</label>
                                                    <span class="text-red">*</span>
                                                    <select class="form-control select2" required="true" name="approved">
                                                        <option selected="selected" value="">Select Status</option>
                                                        <option value="true" <%= isEditMode && user.status ? 'selected' : '' %>>Approve</option>
                                                        <option value="false" <%= isEditMode && !user.status ? 'selected' : '' %>>Disapprove</option>
                                                    </select>
                                                </div>
                                                
                                                
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <label for="image" class="control-label">Profile Picture</label>
                                                            <input id="image_input" accept=".png,.jpg,.jpeg" name="image" type="file">
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group pull-right">
                                                    <button class="btn btn-success"><%= isEditMode ? 'Update' : 'Save' %></button>
                                                </div>
                                            </div>
                                        </form>
                                        
                                        
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>
                </section>
            </div>
            </div>

            <form method="POST" action="/logout" accept-charset="UTF-8" style="display:none;" id="logout"><input name="_token" type="hidden" value="Zw1eYq4tsFJFwBA8kJfLb6fP8Lt3xu69dsUILDfj">
                <button type="submit">Logout</button>
            </form>

            <script>
                window.deleteButtonTrans = 'Delete selected';
                window.copyButtonTrans = 'Copy';
                window.csvButtonTrans = 'CSV';
                window.excelButtonTrans = 'Excel';
                window.pdfButtonTrans = 'PDF';
                window.printButtonTrans = 'Print';
                window.colvisButtonTrans = 'Column visibility';
            </script>


            <script src="/public/adminlte/js/online/jquery-1.11.3.min.js"></script>
            <script src="/public/adminlte/js/online/jquery.dataTables.min.js"></script>
            <script src="/public/adminlte/js/online/dataTables.buttons.min.js"></script>
            <script src="/public/adminlte/js/online/buttons.flash.min.js"></script>
            <script src="/public/adminlte/js/online/jszip.min.js"></script>


            <script src="/public/adminlte/js/online/pdfmake.min.js"></script>
            <script src="/public/adminlte/js/online/vfs_fonts.js"></script>
            <script src="/public/adminlte/js/online/buttons.html5.min.js"></script>
            <script src="/public/adminlte/js/online/buttons.print.min.js"></script>
            <script src="/public/adminlte/js/online/buttons.colVis.min.js"></script>
            <script src="/public/adminlte/js/online/dataTables.select.min.js"></script>
            <script src="/public/adminlte/js/online/jquery-ui.min.js"></script>



            <script src="/public/adminlte/js/bootstrap.min.js"></script>
            <script src="/public/adminlte/js/select2.full.min.js"></script>
            <script src="/public/adminlte/js/main.js"></script>

            <script src="/public/adminlte/plugins/slimScroll/jquery.slimscroll.min.js"></script>
            <script src="/public/adminlte/plugins/fastclick/fastclick.js"></script>
            <script src="/public/adminlte/js/app.min.js"></script>

            <script src="/public/js/sweetalert-dev.js"></script>


            <script>
                // window._token = 'Zw1eYq4tsFJFwBA8kJfLb6fP8Lt3xu69dsUILDfj';

                var csrfToken = $('[name="csrf_token"]').attr('content');

                setInterval(refreshToken, 600000); // 1 hour 

                function refreshToken() {
                    $.get('refresh-csrf').done(function(data) {
                        csrfToken = data; // the new token
                    });
                }

                setInterval(refreshToken, 600000); // 1 hour
            </script>

            <script>
                $.extend(true, $.fn.dataTable.defaults, {
                    "language": {
                        "url": "//cdn.datatables.net/plug-ins/1.10.15/i18n/English.json"
                    }
                });
            </script>



            <script>
                $(document).ready(function() {
                    $(".notifications-menu").on('click', function() {
                        if (!$(this).hasClass('open')) {
                            $('.notifications-menu .label-warning').hide();
                            $.get('internal_notifications/read');
                        }
                    });
                });
            </script>


            <script src="/public/js/angular.js"></script>
            <script src="/public/js/angular-messages.js"></script>

            <script>
                app = angular.module('academia', ['ngMessages']);
                app.directive('stringToNumber', function() {
                    return {
                        require: 'ngModel',
                        link: function(scope, element, attrs, ngModel) {
                            ngModel.$parsers.push(function(value) {
                                return '' + value;
                            });
                            ngModel.$formatters.push(function(value) {
                                return parseFloat(value);
                            });
                        }
                    };
                });
                app.directive('input', function($parse) {
                    return {
                        restrict: 'E',
                        multiElement: true,
                        require: '?ngModel',
                        link: function(scope, element, attrs) {
                            e = element[0];

                            if (attrs.ngModel && attrs.value) {
                                $parse(attrs.ngModel).assign(scope, attrs.value);
                            }
                        }
                    };
                });

                app.directive('textarea', function($parse) {
                    return {
                        restrict: 'E',
                        multiElement: true,
                        require: '?ngModel',
                        link: function(scope, element, attrs) {
                            e = element[0];
                            // console.log(element[0].value);
                            if (attrs.ngModel && e.value) {
                                $parse(attrs.ngModel).assign(scope, e.value);
                            }
                        }
                    };
                });
                app.directive('select', function($parse) {
                    return {
                        restrict: 'E',
                        multiElement: true,
                        require: '?ngModel',
                        link: function(scope, element, attrs) {
                            e = element[0];
                            selectedValue = e.options[e.selectedIndex].value;
                            // console.log(selectedValue);
                            if (attrs.ngModel && selectedValue) {
                                $parse(attrs.ngModel).assign(scope, selectedValue);
                            }
                        }
                    };
                });

                /**
                 * PASSWORD AND CONFIRM PASSWORD FIELDS VALIDATION DIRECTIVE
                 * @return  {[type]} [description]
                 */
                var compareTo = function() {
                    return {
                        require: "ngModel",
                        scope: {
                            otherModelValue: "=compareTo"
                        },
                        link: function(scope, element, attributes, ngModel) {

                            ngModel.$validators.compareTo = function(modelValue) {
                                return modelValue == scope.otherModelValue;
                            };

                            scope.$watch("otherModelValue", function() {
                                ngModel.$validate();
                            });
                        }
                    };
                };

                app.directive("compareTo", compareTo);

                /**
                 * FILE VALIDATION DIRECTIVES BEFORE UPLOAD
                 */

                var validImage = function($rootScope) {
                    var validFormats = ['jpg', 'png', 'jpeg'];
                    return {
                        require: "ngModel",
                        scope: {
                            otherModelValue: "=validImage"
                        },
                        link: function(scope, element, attributes, ngModel) {
                            $rootScope.isImageValid = 'true';
                            // console.log(element);
                            ngModel.$validators.validImage = function(modelValue) {

                                element.on('change', function() {

                                    // e = element[0];
                                    // fileObject = $.parseJSON(e.files);
                                    // console.log(e.files);
                                    file_size = this.files[0].size;
                                    console.log(file_size);
                                    valid_size = true;

                                    var value = element.val(),
                                        ext = value.substring(value.lastIndexOf('.') + 1).toLowerCase();
                                    console.log(validFormats.indexOf(ext) !== -1);
                                    $rootScope.isImageValid = validFormats.indexOf(ext) !== -1;
                                    $rootScope.$apply();
                                    console.log(" $rootScope.isImageValid   " + $rootScope.isImageValid);
                                    if (file_size > 2000000) {

                                        return false;
                                    } else {
                                        return validFormats.indexOf(ext) !== -1;
                                    }
                                });
                            };


                        }
                    };
                };
                app.directive("validImage", validImage);
            </script>
            <link rel="stylesheet" href="/public/css/alertify/themes/alertify.core.css">
            <link rel="stylesheet" href="/public/css/alertify/themes/alertify.default.css" id="toggleCSS">

            <script src="/public/js/alertify.js"></script>
            <script src="/public/js/ngStorage.js"></script>
            <script src="/public/js/angular-messages.js"></script>


            <script>
                var app = angular.module('academia', ['ngMessages']);
            </script>

            <script>
                app.factory('httpPreConfig', function($http, $rootScope, $timeout, $q) {
                    return {
                        webServiceCallPost: function(url, data) {
                            $('#ajax_loader').fadeIn(100);
                            return $http.post(url, data).then(function(response) {
                                $('#ajax_loader').fadeOut(100);
                                return response;
                            });
                        },
                        getToken: function() {
                            return $('[name="_token"]').val();
                        },
                        findIndexInData: function(Array, property, action) {
                            var result = -1;
                            angular.forEach(Array, function(value, index) {
                                if (value[property] == action) {
                                    result = index;
                                }
                            });
                            return result;
                        },
                        showConfirmation: function() {
                            var defer = $q.defer();


                            swal({

                                    title: "Are You Sure?",

                                    type: "warning",

                                    showCancelButton: true,

                                    confirmButtonClass: "btn-danger",

                                    confirmButtonText: "Yes, Delete It!",

                                    cancelButtonText: "No, Cancel Please!",

                                    closeOnConfirm: true,

                                    closeOnCancel: false

                                },

                                function(isConfirm) {

                                    if (isConfirm) {


                                        defer.resolve(1);

                                    } else {

                                        swal("Cancelled", "Your Record Is Safe :)", "error");

                                        defer.resolve(0);
                                    }

                                });
                            return defer.promise;
                        },
                        webServiceCallPost1: function(url, data) {
                            var deferred = $q.defer();
                            return $.ajax({
                                type: "POST",
                                url: url,
                                crossDomain: true,
                                dataType: "json",
                                data: data,
                                timeout: 2000000,
                                async: true,
                                success: function(response) {
                                    console.log("response    " + JSON.stringify(response));
                                    deferred.resolve();
                                },
                                error: function(xhr, ajaxOptions, thrownError) {

                                    if (xhr.status == 0) {

                                    } else if (xhr.status == 404) {

                                    } else {

                                    }
                                },
                                beforeSend: function() {},
                                complete: function() {}
                            });

                        }
                    }

                });
            </script>

            <script>
                app.controller('prepareUserData', function($scope, $http, httpPreConfig) {



                    $scope.getStates = function(selected_country) {

                        route = '/cities/get-states',
                            data = {
                                _method: 'post',
                                '_token': httpPreConfig.getToken(),
                                'id': selected_country
                            };

                        $scope.states = [];

                        httpPreConfig.webServiceCallPost(route, data).then(function(result) {

                            $scope.states = result.data.states;
                        });
                    }


                    $scope.getCities = function(selected_state) {

                        route = '/users/get-cities',
                            data = {
                                _method: 'post',
                                '_token': httpPreConfig.getToken(),
                                'id': selected_state
                            };

                        $scope.cities = [];

                        httpPreConfig.webServiceCallPost(route, data).then(function(result) {

                            $scope.cities = result.data.cities;
                        });
                    }



                    $scope.initFunctions = function() {

                    }

                });
            </script>
            <script>
                var file = document.getElementById('image_input');

                file.onchange = function(e) {
                    var ext = this.value.match(/\.([^\.]+)$/)[1];
                    switch (ext) {
                        case 'jpg':
                        case 'jpeg':
                        case 'png':

                            break;
                        default:
                            alertify.error("File Type Not Allowed");
                            this.value = '';
                    }
                };



                var company_logo = document.getElementById('company_logo_input');

                company_logo.onchange = function(e) {
                    var ext = this.value.match(/\.([^\.]+)$/)[1];
                    switch (ext) {
                        case 'jpg':
                        case 'jpeg':
                        case 'png':

                            break;
                        default:
                            alertify.error("File Type Not Allowed");
                            this.value = '';
                    }
                };
            </script>


</body>

</html>